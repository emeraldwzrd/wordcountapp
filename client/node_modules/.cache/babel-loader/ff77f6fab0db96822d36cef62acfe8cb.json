{"ast":null,"code":"import axios from \"axios\";\nconst baseURL = \"http://localhost:4000\";\nexport const getTodos = async () => {\n  try {\n    const todos = await axios.get(baseURL + \"/todos\");\n    return todos;\n  } catch (error) {\n    throw new Error(\"Issue with getTodos\");\n  }\n};\nexport const addTodo = async (formData) => {\n  try {\n    const todo = {\n      name: formData.name,\n      description: formData.description,\n      status: false\n    };\n    const saveTodo = await axios.post(baseUrl + \"/add-todo\", todo);\n    return saveTodo;\n  } catch (error) {\n    throw new Error(\"Issue with addTodo\");\n  }\n};\nexport const updateTodo = async (todo) => {\n  try {\n    const todoUpdate = {\n      status: true\n    };\n    const updatedTodo = await axios.put(`${baseUrl}/edit-todo/${todo._id}`, todoUpdate);\n    return updatedTodo;\n  } catch (error) {\n    throw new Error(\"Issue with updateTodo\");\n  }\n};\nexport const deleteTodo = async (_id) => {\n  try {\n    const deletedTodo = await axios.delete(`${baseUrl}/delete-todo/${_id}`);\n    return deletedTodo;\n  } catch (error) {\n    throw new Error(\"Issue with deleteTodo\");\n  }\n};","map":{"version":3,"sources":["/Users/michaelrodriguez/Desktop/nate/client/src/API.ts"],"names":["axios","baseURL","getTodos","todos","get","error","Error","addTodo","formData","todo","name","description","status","saveTodo","post","baseUrl","updateTodo","todoUpdate","updatedTodo","put","_id","deleteTodo","deletedTodo","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAqC,OAArC;AAEA,MAAMC,OAAe,GAAG,uBAAxB;AAEA,OAAO,MAAMC,QAAQ,GAAG,YAAiD;AACvE,MAAI;AACF,UAAMC,KAAiC,GAAG,MAAMH,KAAK,CAACI,GAAN,CAC9CH,OAAO,GAAG,QADoC,CAAhD;AAGA,WAAOE,KAAP;AACD,GALD,CAKE,OAAOE,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAU,qBAAV,CAAN;AACD;AACF,CATM;AAWP,OAAO,MAAMC,OAAO,GAAG,OACrBC,QADqB,KAEmB;AACxC,MAAI;AACF,UAAMC,IAAwB,GAAG;AAC/BC,MAAAA,IAAI,EAAEF,QAAQ,CAACE,IADgB;AAE/BC,MAAAA,WAAW,EAAEH,QAAQ,CAACG,WAFS;AAG/BC,MAAAA,MAAM,EAAE;AAHuB,KAAjC;AAKA,UAAMC,QAAoC,GAAG,MAAMb,KAAK,CAACc,IAAN,CACjDC,OAAO,GAAG,WADuC,EAEjDN,IAFiD,CAAnD;AAIA,WAAOI,QAAP;AACD,GAXD,CAWE,OAAOR,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAU,oBAAV,CAAN;AACD;AACF,CAjBM;AAmBP,OAAO,MAAMU,UAAU,GAAG,OACxBP,IADwB,KAEgB;AACxC,MAAI;AACF,UAAMQ,UAAiC,GAAG;AACxCL,MAAAA,MAAM,EAAE;AADgC,KAA1C;AAGA,UAAMM,WAAuC,GAAG,MAAMlB,KAAK,CAACmB,GAAN,CACnD,GAAEJ,OAAQ,cAAaN,IAAI,CAACW,GAAI,EADmB,EAEpDH,UAFoD,CAAtD;AAIA,WAAOC,WAAP;AACD,GATD,CASE,OAAOb,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;AACF,CAfM;AAiBP,OAAO,MAAMe,UAAU,GAAG,OACxBD,GADwB,KAEgB;AACxC,MAAI;AACF,UAAME,WAAuC,GAAG,MAAMtB,KAAK,CAACuB,MAAN,CACnD,GAAER,OAAQ,gBAAeK,GAAI,EADsB,CAAtD;AAGA,WAAOE,WAAP;AACD,GALD,CAKE,OAAOjB,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;AACF,CAXM","sourcesContent":["import axios, { AxiosResponse } from \"axios\"\n\nconst baseURL: string = \"http://localhost:4000\"\n\nexport const getTodos = async (): Promise<AxiosResponse<ApiDataType>> => {\n  try {\n    const todos: AxiosResponse<ApiDataType> = await axios.get(\n      baseURL + \"/todos\"\n    )\n    return todos\n  } catch (error) {\n    throw new Error(\"Issue with getTodos\")\n  }\n}\n\nexport const addTodo = async (\n  formData: ITodo\n): Promise<AxiosResponse<ApiDataType>> => {\n  try {\n    const todo: Omit<ITodo, \"_id\"> = {\n      name: formData.name,\n      description: formData.description,\n      status: false,\n    }\n    const saveTodo: AxiosResponse<ApiDataType> = await axios.post(\n      baseUrl + \"/add-todo\",\n      todo\n    )\n    return saveTodo\n  } catch (error) {\n    throw new Error(\"Issue with addTodo\")\n  }\n}\n\nexport const updateTodo = async (\n  todo: ITodo\n): Promise<AxiosResponse<ApiDataType>> => {\n  try {\n    const todoUpdate: Pick<ITodo, \"status\"> = {\n      status: true,\n    }\n    const updatedTodo: AxiosResponse<ApiDataType> = await axios.put(\n      `${baseUrl}/edit-todo/${todo._id}`,\n      todoUpdate\n    )\n    return updatedTodo\n  } catch (error) {\n    throw new Error(\"Issue with updateTodo\")\n  }\n}\n\nexport const deleteTodo = async (\n  _id: string\n): Promise<AxiosResponse<ApiDataType>> => {\n  try {\n    const deletedTodo: AxiosResponse<ApiDataType> = await axios.delete(\n      `${baseUrl}/delete-todo/${_id}`\n    )\n    return deletedTodo\n  } catch (error) {\n    throw new Error(\"Issue with deleteTodo\")\n  }\n}\n"]},"metadata":{},"sourceType":"module"}