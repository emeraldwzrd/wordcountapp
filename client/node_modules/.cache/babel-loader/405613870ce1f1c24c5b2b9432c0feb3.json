{"ast":null,"code":"var _jsxFileName = \"/Users/michaelrodriguez/Desktop/nate/client/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport CounterForm from './components/CounterForm';\nimport WordCountItem from './components/WordCountItem';\nimport { countWords } from './API';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [wordCounts, setWordCounts] = useState([]);\n\n  const handleCountWords = (e, formData) => {\n    e.preventDefault();\n    countWords(formData).then(({\n      status,\n      data\n    }) => {\n      if (status !== 201) {\n        throw new Error('Error! Could not count words from URL');\n      }\n\n      setWordCounts(data.wordCount);\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"URL Word Count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CounterForm, {\n      countWordsFromURL: handleCountWords\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), wordCounts.map(wordCount => /*#__PURE__*/_jsxDEV(WordCountItem, {\n      wordCount: wordCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"UmjlEj3lFlmWCa6Fbrg2TztKxGI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/michaelrodriguez/Desktop/nate/client/src/App.tsx"],"names":["React","useState","CounterForm","WordCountItem","countWords","App","wordCounts","setWordCounts","handleCountWords","e","formData","preventDefault","then","status","data","Error","wordCount","catch","err","console","log","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,SAASC,UAAT,QAA2B,OAA3B;;;AAEA,MAAMC,GAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAa,EAAb,CAA5C;;AAGD,QAAMO,gBAAgB,GAAG,CAACC,CAAD,EAAqBC,QAArB,KAA8C;AACrED,IAAAA,CAAC,CAACE,cAAF;AACAP,IAAAA,UAAU,CAACM,QAAD,CAAV,CACCE,IADD,CACM,CAAC;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV,KAAD,KAAsB;AAC3B,UAAID,MAAM,KAAK,GAAf,EAAoB;AAClB,cAAM,IAAIE,KAAJ,CAAU,uCAAV,CAAN;AACD;;AACDR,MAAAA,aAAa,CAACO,IAAI,CAACE,SAAN,CAAb;AACD,KANA,EAOAC,KAPA,CAOOC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAPf;AAQF,GAVA;;AAaC,sBACE;AAAM,IAAA,SAAS,EAAC,KAAhB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,WAAD;AAAa,MAAA,iBAAiB,EAAEV;AAAhC;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGF,UAAU,CAACe,GAAX,CAAgBL,SAAD,iBACd,QAAC,aAAD;AACE,MAAA,SAAS,EAAEA;AADb;AAAA;AAAA;AAAA;AAAA,YADD,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA5BD;;GAAMX,G;;KAAAA,G;AA8BN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react'\nimport CounterForm from './components/CounterForm'\nimport WordCountItem from './components/WordCountItem'\nimport { countWords } from './API'\n\nconst App: React.FC = () => {\n  const [wordCounts, setWordCounts] = useState<ICounter[]>([])\n\n\n const handleCountWords = (e: React.FormEvent, formData: IURL): void => {\n   e.preventDefault()\n   countWords(formData)\n   .then(({ status, data }) => {\n    if (status !== 201) {\n      throw new Error('Error! Could not count words from URL')\n    }\n    setWordCounts(data.wordCount)\n  })\n  .catch((err) => console.log(err))\n}\n\n\n  return (\n    <main className='App'>\n      <h1>URL Word Count</h1>\n      <CounterForm countWordsFromURL={handleCountWords} />\n      {wordCounts.map((wordCount: ICounter) => (\n        <WordCountItem\n          wordCount={wordCount}\n        />\n      ))}\n    </main>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}