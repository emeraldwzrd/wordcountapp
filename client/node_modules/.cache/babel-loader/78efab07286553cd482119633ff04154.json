{"ast":null,"code":"import axios from \"axios\";\nconst baseURL = \"http://localhost:4000\";\nexport const countWords = async (formData) => {\n  try {\n    //const todo: Omit<ITodo, \"_id\"> = {\n    //  name: formData.name,\n    //  description: formData.description,\n    //  status: false,\n    //}\n    console.log(url);\n    const url = JSON.stringify({\n      url: formData.url\n    });\n    const countWordsResp = await axios.post(baseURL + \"/countwords\", url, {\n      headers: {\n        // Overwrite Axios's automatically set Content-Type\n        'Content-Type': 'application/json'\n      }\n    });\n    return countWordsResp;\n  } catch (error) {\n    throw new Error(\"Issue with addTodo\");\n  }\n};\nexport const sortWords = async () => {\n  try {\n    console.log(baseURL);\n    const todos = await axios.get(baseURL + \"/sortwords\");\n    return todos;\n  } catch (error) {\n    throw new Error(\"Issue with getTodos\");\n  }\n};","map":{"version":3,"sources":["/Users/michaelrodriguez/Desktop/nate/client/src/API.ts"],"names":["axios","baseURL","countWords","formData","console","log","url","JSON","stringify","countWordsResp","post","headers","error","Error","sortWords","todos","get"],"mappings":"AAAA,OAAOA,KAAP,MAAqC,OAArC;AAEA,MAAMC,OAAe,GAAG,uBAAxB;AAEA,OAAO,MAAMC,UAAU,GAAG,OACxBC,QADwB,KAEgB;AACxC,MAAI;AACF;AACA;AACA;AACA;AACA;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACA,UAAMA,GAAG,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEF,MAAAA,GAAG,EAAEH,QAAQ,CAACG;AAAhB,KAAf,CAAZ;AACA,UAAMG,cAA0C,GAAG,MAAMT,KAAK,CAACU,IAAN,CACvDT,OAAO,GAAG,aAD6C,EAEvDK,GAFuD,EAGvD;AACEK,MAAAA,OAAO,EAAE;AACT;AACA,wBAAgB;AAFP;AADX,KAHuD,CAAzD;AAUA,WAAOF,cAAP;AACD,GAnBD,CAmBE,OAAOG,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAU,oBAAV,CAAN;AACD;AACF,CAzBM;AA4BP,OAAO,MAAMC,SAAS,GAAG,YAAiD;AACxE,MAAI;AACFV,IAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACA,UAAMc,KAAiC,GAAG,MAAMf,KAAK,CAACgB,GAAN,CAC9Cf,OAAO,GAAG,YADoC,CAAhD;AAGA,WAAOc,KAAP;AACD,GAND,CAME,OAAOH,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAU,qBAAV,CAAN;AACD;AACF,CAVM","sourcesContent":["import axios, { AxiosResponse } from \"axios\"\n\nconst baseURL: string = \"http://localhost:4000\"\n\nexport const countWords = async (\n  formData: IURL\n): Promise<AxiosResponse<ApiDataType>> => {\n  try {\n    //const todo: Omit<ITodo, \"_id\"> = {\n    //  name: formData.name,\n    //  description: formData.description,\n    //  status: false,\n    //}\n    console.log(url)\n    const url = JSON.stringify({ url: formData.url })\n    const countWordsResp: AxiosResponse<ApiDataType> = await axios.post(\n      baseURL + \"/countwords\", \n      url,\n      {\n        headers: {\n        // Overwrite Axios's automatically set Content-Type\n        'Content-Type': 'application/json'\n        }\n      }\n    );\n    return countWordsResp\n  } catch (error) {\n    throw new Error(\"Issue with addTodo\")\n  }\n}\n\n\nexport const sortWords = async (): Promise<AxiosResponse<ApiDataType>> => {\n  try {\n    console.log(baseURL)\n    const todos: AxiosResponse<ApiDataType> = await axios.get(\n      baseURL + \"/sortwords\"\n    )\n    return todos\n  } catch (error) {\n    throw new Error(\"Issue with getTodos\")\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}