{"ast":null,"code":"import axios from \"axios\";\nconst baseURL = \"http://localhost:4000\";\nexport const countWords = async (formData) => {\n  try {\n    //const todo: Omit<ITodo, \"_id\"> = {\n    //  name: formData.name,\n    //  description: formData.description,\n    //  status: false,\n    //}\n    console.log(formData.url);\n    const countWordsResp = await axios.post(baseURL + \"/countwords\", formData);\n    return countWordsResp;\n  } catch (error) {\n    throw new Error(\"Issue with addTodo\");\n  }\n};\nexport const sortWords = async () => {\n  try {\n    console.log(baseURL);\n    const todos = await axios.get(baseURL + \"/sortwords\");\n    return todos;\n  } catch (error) {\n    throw new Error(\"Issue with getTodos\");\n  }\n};","map":{"version":3,"sources":["/Users/michaelrodriguez/Desktop/nate/client/src/API.ts"],"names":["axios","baseURL","countWords","formData","console","log","url","countWordsResp","post","error","Error","sortWords","todos","get"],"mappings":"AAAA,OAAOA,KAAP,MAAqC,OAArC;AAEA,MAAMC,OAAe,GAAG,uBAAxB;AAGA,OAAO,MAAMC,UAAU,GAAG,OACxBC,QADwB,KAEgB;AACxC,MAAI;AACF;AACA;AACA;AACA;AACA;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,GAArB;AACA,UAAMC,cAA0C,GAAG,MAAMP,KAAK,CAACQ,IAAN,CACvDP,OAAO,GAAG,aAD6C,EAEvDE,QAFuD,CAAzD;AAIA,WAAOI,cAAP;AACD,GAZD,CAYE,OAAOE,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAU,oBAAV,CAAN;AACD;AACF,CAlBM;AAqBP,OAAO,MAAMC,SAAS,GAAG,YAAiD;AACxE,MAAI;AACFP,IAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACA,UAAMW,KAAiC,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAC9CZ,OAAO,GAAG,YADoC,CAAhD;AAGA,WAAOW,KAAP;AACD,GAND,CAME,OAAOH,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAU,qBAAV,CAAN;AACD;AACF,CAVM","sourcesContent":["import axios, { AxiosResponse } from \"axios\"\n\nconst baseURL: string = \"http://localhost:4000\"\n\n\nexport const countWords = async (\n  formData: string\n): Promise<AxiosResponse<ApiDataType>> => {\n  try {\n    //const todo: Omit<ITodo, \"_id\"> = {\n    //  name: formData.name,\n    //  description: formData.description,\n    //  status: false,\n    //}\n    console.log(formData.url)\n    const countWordsResp: AxiosResponse<ApiDataType> = await axios.post(\n      baseURL + \"/countwords\",\n      formData\n    )\n    return countWordsResp\n  } catch (error) {\n    throw new Error(\"Issue with addTodo\")\n  }\n}\n\n\nexport const sortWords = async (): Promise<AxiosResponse<ApiDataType>> => {\n  try {\n    console.log(baseURL)\n    const todos: AxiosResponse<ApiDataType> = await axios.get(\n      baseURL + \"/sortwords\"\n    )\n    return todos\n  } catch (error) {\n    throw new Error(\"Issue with getTodos\")\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}