{"ast":null,"code":"var _jsxFileName = \"/Users/michaelrodriguez/Desktop/nate/client/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react'; //import TodoItem from './components/TodoItem'\n\nimport CounterForm from './components/CounterForm'; //import { getTodos, addTodo, updateTodo, deleteTodo } from './API'\n\nimport { countWords } from './API';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  //const [todos, setTodos] = useState<ITodo[]>([])\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  const fetchTodos = () => {\n    getTodos().then(({\n      data: {\n        todos\n      }\n    }) => setTodos(todos)).catch(err => console.log(err));\n  };\n\n  const handleCountWords = (e, formData) => {\n    e.preventDefault();\n    countWords(formData).then(({\n      status,\n      data\n    }) => {\n      if (status !== 201) {\n        throw new Error('Error! Could not count words from URL');\n      } //setTodos(data.todos)\n\n    }).catch(err => console.log(err));\n  };\n\n  const handleUpdateTodo = todo => {\n    updateTodo(todo).then(({\n      status,\n      data\n    }) => {\n      if (status !== 200) {\n        throw new Error('Error! Todo not updated');\n      }\n\n      setTodos(data.todos);\n    }).catch(err => console.log(err));\n  };\n\n  const handleDeleteTodo = _id => {\n    deleteTodo(_id).then(({\n      status,\n      data\n    }) => {\n      if (status !== 200) {\n        throw new Error('Error! Todo not deleted');\n      }\n\n      setTodos(data.todos);\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"URL Word Count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CounterForm, {\n      countWordsFromURL: handleCountWords\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/michaelrodriguez/Desktop/nate/client/src/App.tsx"],"names":["React","useEffect","CounterForm","countWords","App","fetchTodos","getTodos","then","data","todos","setTodos","catch","err","console","log","handleCountWords","e","formData","preventDefault","status","Error","handleUpdateTodo","todo","updateTodo","handleDeleteTodo","_id","deleteTodo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAA2C,OAA3C,C,CACA;;AACA,OAAOC,WAAP,MAAwB,0BAAxB,C,CACA;;AACA,SAASC,UAAT,QAAsC,OAAtC;;;AAEA,MAAMC,GAAa,GAAG,MAAM;AAAA;;AAC1B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,UAAU,GAAG,MAAY;AAC7BC,IAAAA,QAAQ,GACPC,IADD,CACM,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAEC,QAAAA;AAAF;AAAR,KAAD,KAAwCC,QAAQ,CAACD,KAAD,CADtD,EAECE,KAFD,CAEQC,GAAD,IAAgBC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFvB;AAGD,GAJD;;AAMD,QAAMG,gBAAgB,GAAG,CAACC,CAAD,EAAqBC,QAArB,KAAgD;AACvED,IAAAA,CAAC,CAACE,cAAF;AACAf,IAAAA,UAAU,CAACc,QAAD,CAAV,CACCV,IADD,CACM,CAAC;AAAEY,MAAAA,MAAF;AAAUX,MAAAA;AAAV,KAAD,KAAsB;AAC3B,UAAIW,MAAM,KAAK,GAAf,EAAoB;AAClB,cAAM,IAAIC,KAAJ,CAAU,uCAAV,CAAN;AACD,OAH0B,CAI3B;;AACD,KANA,EAOAT,KAPA,CAOOC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAPf;AAQF,GAVA;;AAYC,QAAMS,gBAAgB,GAAIC,IAAD,IAAuB;AAC9CC,IAAAA,UAAU,CAACD,IAAD,CAAV,CACCf,IADD,CACM,CAAC;AAAEY,MAAAA,MAAF;AAAUX,MAAAA;AAAV,KAAD,KAAsB;AACxB,UAAIW,MAAM,KAAK,GAAf,EAAoB;AAClB,cAAM,IAAIC,KAAJ,CAAU,yBAAV,CAAN;AACD;;AACDV,MAAAA,QAAQ,CAACF,IAAI,CAACC,KAAN,CAAR;AACD,KANH,EAOGE,KAPH,CAOUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAPlB;AAQD,GATD;;AAWA,QAAMY,gBAAgB,GAAIC,GAAD,IAAuB;AAC9CC,IAAAA,UAAU,CAACD,GAAD,CAAV,CACClB,IADD,CACM,CAAC;AAAEY,MAAAA,MAAF;AAAUX,MAAAA;AAAV,KAAD,KAAsB;AACxB,UAAIW,MAAM,KAAK,GAAf,EAAoB;AAClB,cAAM,IAAIC,KAAJ,CAAU,yBAAV,CAAN;AACD;;AACDV,MAAAA,QAAQ,CAACF,IAAI,CAACC,KAAN,CAAR;AACD,KANH,EAOGE,KAPH,CAOUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAPlB;AAQD,GATD;;AAWA,sBACE;AAAM,IAAA,SAAS,EAAC,KAAhB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,WAAD;AAAa,MAAA,iBAAiB,EAAEG;AAAhC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CArDD;;GAAMX,G;;KAAAA,G;AAuDN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\n//import TodoItem from './components/TodoItem'\nimport CounterForm from './components/CounterForm'\n//import { getTodos, addTodo, updateTodo, deleteTodo } from './API'\nimport { countWords, sortWords } from './API'\n\nconst App: React.FC = () => {\n  //const [todos, setTodos] = useState<ITodo[]>([])\n\n  useEffect(() => {\n    fetchTodos()\n  }, [])\n\n  const fetchTodos = (): void => {\n    getTodos()\n    .then(({ data: { todos } }: ITodo[] | any) => setTodos(todos))\n    .catch((err: Error) => console.log(err))\n  }\n\n const handleCountWords = (e: React.FormEvent, formData: string): void => {\n   e.preventDefault()\n   countWords(formData)\n   .then(({ status, data }) => {\n    if (status !== 201) {\n      throw new Error('Error! Could not count words from URL')\n    }\n    //setTodos(data.todos)\n  })\n  .catch((err) => console.log(err))\n}\n\n  const handleUpdateTodo = (todo: ITodo): void => {\n    updateTodo(todo)\n    .then(({ status, data }) => {\n        if (status !== 200) {\n          throw new Error('Error! Todo not updated')\n        }\n        setTodos(data.todos)\n      })\n      .catch((err) => console.log(err))\n  }\n\n  const handleDeleteTodo = (_id: string): void => {\n    deleteTodo(_id)\n    .then(({ status, data }) => {\n        if (status !== 200) {\n          throw new Error('Error! Todo not deleted')\n        }\n        setTodos(data.todos)\n      })\n      .catch((err) => console.log(err))\n  }\n\n  return (\n    <main className='App'>\n      <h1>URL Word Count</h1>\n      <CounterForm countWordsFromURL={handleCountWords} />\n    </main>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}